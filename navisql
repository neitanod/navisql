#!/bin/bash
cd "$(dirname "$0")"

source ./lib/colors.sh

# Check if the required folder and files exists, create if not
navi_folder="$HOME/.navisql"
if [ ! -d "$navi_folder" ]; then
mkdir "$navi_folder"
fi
config_file="$HOME/.navisql/navisql.json"
if [ ! -f "$config_file" ]; then
echo "{ \"connection\": {} }" > "$config_file"
fi
cache_file="$HOME/.navisql/navisql_cache.json"
if [ ! -f "$cache_file" ]; then
echo "{}" > "$cache_file"
fi

# Main script to delegate commands to specific scripts

# Define a function to print the help
print_help() {
  echo "Usage: navisql <command> [arguments]"
  echo "Commands:"
  echo "  ${GREEN}ls               ${YELLOW} Prints a page of records from a given table${NORMAL}"
  echo "  ${GREEN}show             ${YELLOW} Show a record by id${NORMAL}"
  echo "  ${GREEN}query            ${YELLOW} Run a custom query${NORMAL}"
  echo "  ${GREEN}connection-add   ${YELLOW} Add a new connection${NORMAL}"
  echo "  ${GREEN}connection-remove${YELLOW} Remove an existing connection${NORMAL}"
  echo "  ${GREEN}connections-list ${YELLOW} List all connections${NORMAL}"
  echo "  ${GREEN}cache-build      ${YELLOW} Build cache for databases and tables${NORMAL}"
  echo "  ${GREEN}fk-add           ${YELLOW} Add a foreign key reference${NORMAL}"
  echo "  ${GREEN}config           ${YELLOW} Add/replace/remove a configuration value${NORMAL}"
  echo "  ${GREEN}history          ${YELLOW} Show latest history entries${NORMAL}"
}

# Check if at least one argument is provided
if [ "$#" -lt 1 ]; then
  print_help
  exit 1
fi

# Extract the command and shift the arguments
command=$1
shift

# Delegate the work to the specific script based on the command
save_history=true

case "$command" in
  ls)
    ./navisql_ls "$@"
    ;;
  show)
    ./navisql_show "$@"
    ;;
  query)
    save_history=false   # Save history in a custom way
    ./navisql_query "$@"
     echo "navisql $command $1 $2 \"$3\"" >> "$HOME/.navisql/history"
    ;;
  config)
    ./navisql_config "$@"
    ;;
  connection-add)
    ./navisql_connection_add "$@"
    ;;
  connection-remove)
    ./navisql_connection_remove "$@"
    ;;
  connection-list)
    ./navisql_connection_list "$@"
    ;;
  cache-build)
    ./navisql_cache_build "$@"
    ;;
  fk-add)
    ./navisql_fk_add "$@"
    ;;
  history)
    # Print the history of commands
    # Print with line numbers
    history=$(tail -n 70 "$HOME/.navisql/history" | cat -n)
    # Re-execute selected command (selected by number in $1)
    if [ -n "$1" ]; then
      selected_command=$(echo "$history" | grep "^ *$1\W" | sed "s/^ *$1[^ ]* *//")
      if [ -n "$selected_command" ]; then
        echo "${GREY_BG}navisql $selected_command${NORMAL_BG}"
        bash -c "./navisql $selected_command"
      fi
    else
      echo "$history"
    fi

    save_history=false
    ;;
  *)
    save_history=false
    echo "Unknown command: $command"
    print_help
    exit 1
    ;;
esac
# if variable save_history is true, save the command to history
if [ "$save_history" = true ]; then
  # Save the command to history in the format: "navisql <command> <arguments>"
  # into file ~/.navisql/history
  echo "navisql $command $*" >> "$HOME/.navisql/history"
fi
