#!/bin/bash

# Function to add foreign key reference to the CSV file
navisql_add_fk() {
  local connection=$1
  local db=$2
  local table=$3
  local field=$4
  local referenced_db=$5
  local referenced_table=$6
  local referenced_field=${7:-id}  # Default to 'id' if no referenced_field is provided

  # Define the CSV file
  local config_dir="$HOME/.navisql"
  local csv_file="$config_dir/fk.csv"

  # Check if the configuration directory exists, if not create it
  if [ ! -d "$config_dir" ]; then
    echo "Configuration directory not found, creating: $config_dir"
    mkdir -p "$config_dir"
  fi

  # Prepare the new entry
  local new_entry="$connection,$db,$table,$field,$referenced_db,$referenced_table,$referenced_field"

  # Check if the CSV file exists
  if [ ! -f "$csv_file" ]; then
    echo "$new_entry" > "$csv_file"
    echo "Foreign key reference added: $db.$table.$field -> $referenced_db.$referenced_table.$referenced_field"
    return 0
  fi

  # Check if the entry already exists and replace it if necessary
  local temp_file=$(mktemp)
  local replaced=0

  while IFS= read -r line; do
    if [[ "$line" == "$connection,$db,$table,$field,"* ]]; then
      echo "$new_entry" >> "$temp_file"
      replaced=1
    else
      echo "$line" >> "$temp_file"
    fi
  done < "$csv_file"

  if [ $replaced -eq 0 ]; then
    echo "$new_entry" >> "$temp_file"
  fi

  mv "$temp_file" "$csv_file"
  echo "Foreign key reference added: $db.$table.$field -> $referenced_db.$referenced_table.$referenced_field"
}

# Check if the correct number of arguments are provided
if [ "$#" -lt 5 ]; then
  echo "Usage: navisql fk-add <connection> <db> <table> <field> <referenced_db> <referenced_table> [<referenced_field>]"
  exit 1
fi

# Call the function with the provided arguments
navisql_add_fk "$1" "$2" "$3" "$4" "$5" "$6"
